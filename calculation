// Alexandra Vabnits
#include <iostream>
#include <vector>
#include <iomanip>
#include <valarray>

using namespace std;

double v(double v0, double k0, double a1, double b1, double a2, double b2, double t) {
    return a2 / b2 + (v0 - a2 / b2) * cos(sqrt(a1 * a2) * t) -
           (k0 - a1 / b1) * ((sqrt(a2) * b1) / (b2 * sqrt(a1))) * sin(sqrt(a1 * a2) * t);
}

double k(double v0, double k0, double a1, double b1, double a2, double b2, double t) {
    return a1 / b1 + (k0 - a1 / b1) * cos(sqrt(a1 * a2) * t) +
           (v0 - a2 / b2) * ((sqrt(a1) * b2) / (b1 * sqrt(a2))) * sin(sqrt(a1 * a2) * t);
}

int main() {
    double v0, k0, a1, b1, a2, b2, t, n;
    cin >> v0 >> k0 >> a1 >> b1 >> a2 >> b2 >> t >> n;

    double h = t / n;

    cout << fixed << setprecision(2);

    // initialize array of values
    vector<double> time(n + 1);
    vector<double> victims(n + 1);
    vector<double> killers(n + 1);

    for (int i = 0; i <= n; i++) {
        // put values into an array
        time[i] = i * h;
        victims[i] = v(v0, k0, a1, b1, a2, b2, i * h);
        killers[i] = k(v0, k0, a1, b1, a2, b2, i * h);

    }

    // print the values in array
    cout << "t: " << endl;
    for (double i : time) {
        cout << i << " ";
    }
    cout << endl;
    cout << "v: " << endl;
    for (double victim : victims) {
        cout << victim << " ";
    }
    cout << endl;
    cout << "k: " << endl;
    for (double killer : killers) {
        cout << killer << " ";
    }
    cout << endl;
    return 0;

}
